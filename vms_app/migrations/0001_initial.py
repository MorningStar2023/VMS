# Generated by Django 5.0.1 on 2024-05-02 02:08

import django.db.models.deletion
import uuid
import vms_app.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DestinationLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_working', models.BooleanField(default=False)),
                ('is_spare', models.BooleanField(default=False)),
                ('is_under_maintenance', models.BooleanField(default=False)),
                ('under_maintenance_date', models.DateField(blank=True, null=True)),
                ('load_estimation', models.IntegerField(default=1000)),
                ('remark', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward_name', models.CharField(max_length=50, unique=True)),
                ('ward_code', models.CharField(blank=True, default='ZW', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshop_name', models.CharField(max_length=50)),
                ('incharge', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_name', models.CharField(blank=True, max_length=50, null=True)),
                ('zone_code', models.CharField(blank=True, default='Z', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('employee_id', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_zonal_manager', models.BooleanField(default=False)),
                ('is_mechanic', models.BooleanField(default=False)),
                ('contact', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('remark', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', vms_app.models.EmployeeManager()),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route', models.CharField(blank=True, max_length=500, null=True)),
                ('starting_point', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('km_estimation', models.IntegerField(blank=True, default=50, null=True)),
                ('time_estimation', models.IntegerField(blank=True, default=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_working', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_created_by', to=settings.AUTH_USER_MODEL)),
                ('supervisor', models.ForeignKey(blank=True, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_supervised_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_updated_by', to=settings.AUTH_USER_MODEL)),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ward_routes_set', to='vms_app.ward')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='zone_routes_set', to='vms_app.zone')),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_name', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('Others', 'Others')], max_length=100)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('out_km', models.FloatField(blank=True, default=0.0, null=True)),
                ('start_image', models.ImageField(blank=True, null=True, upload_to='shift_start/')),
                ('driver', models.CharField(default='Vendor', max_length=500)),
                ('shift_date', models.DateField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('in_km', models.FloatField(blank=True, default=0.0, null=True)),
                ('end_image', models.ImageField(blank=True, null=True, upload_to='shift_end/')),
                ('shift_remark', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('time_estimation', models.FloatField(default=0, editable=False)),
                ('km_estimation', models.IntegerField(default=1, editable=False)),
                ('routes', models.ManyToManyField(limit_choices_to={'is_active': True, 'is_working': False}, to='vms_app.route')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicles_RTO_details',
            fields=[
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='vms_app.vehicle')),
                ('chassis_number', models.CharField(blank=True, max_length=50, null=True)),
                ('vehicle_model', models.CharField(blank=True, max_length=50, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=50, null=True)),
                ('engine_number', models.CharField(blank=True, max_length=50, null=True)),
                ('fc_date', models.DateField(blank=True, null=True)),
                ('insurance', models.DateField(blank=True, null=True)),
                ('puc', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='current_route',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='routesofvehicle', to='vms_app.route'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='supervisor',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_supervised_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='TripHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_current', models.BooleanField(default=True, editable=False)),
                ('trip_date', models.DateField(auto_now_add=True)),
                ('trip_start_time', models.DateTimeField(auto_now_add=True)),
                ('updted_on', models.DateTimeField(auto_now=True)),
                ('trip_end_time', models.DateTimeField(blank=True, null=True)),
                ('wet_waste', models.IntegerField(default=0)),
                ('recyclable_waste', models.IntegerField(default=0)),
                ('dry_waste', models.IntegerField(default=0)),
                ('inerts', models.IntegerField(default=0)),
                ('household_hazard', models.IntegerField(default=0)),
                ('green_garbages', models.IntegerField(default=0)),
                ('other_waste', models.IntegerField(default=0)),
                ('trip_remark', models.TextField(blank=True, null=True)),
                ('trip_count', models.IntegerField(default=0)),
                ('trip_efficiency', models.FloatField(default=0)),
                ('destination', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dump_history_set', to='vms_app.destinationlocation')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_trips_set', to='vms_app.shift')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_trips_set', to='vms_app.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='shift',
            name='vehicle',
            field=models.ForeignKey(limit_choices_to={'is_active': True, 'is_under_maintenance': False, 'is_working': False}, on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_shift_set', to='vms_app.vehicle'),
        ),
        migrations.CreateModel(
            name='MaintenanceSchedules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('odo_closing', models.FloatField(default=0)),
                ('service', models.CharField(choices=[('SS1 WITH ENGINE OIL & FILTER', 'SS1 WITH ENGINE OIL & FILTER'), ('SS Gen WITHOUT ENGINE OIL & FILTER', 'SS Gen WITHOUT ENGINE OIL & FILTER'), ('SS2', 'SS2'), ('SS3', 'SS3'), ('SS4', 'SS4')], max_length=250)),
                ('scheduled_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Done', 'Done'), ('Pending', 'Pending')], max_length=50)),
                ('vehicle', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_shcedule_history', to='vms_app.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='FuelMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(choices=[('P', 'Petrol'), ('D', 'Diesel'), ('G', 'Gas')], max_length=1)),
                ('fuel_km', models.FloatField(blank=True, null=True)),
                ('fuel_date', models.DateField(blank=True, null=True)),
                ('fuel_quantity', models.FloatField(default=1)),
                ('fuel_cost', models.FloatField(default=102.6)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_fuel_history', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_fuelupdate_history', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(limit_choices_to={'is_active': True, 'is_under_maintenance': False}, on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_fuel_history', to='vms_app.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Batches',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=100)),
                ('vehicles', models.ManyToManyField(blank=True, null=True, related_name='vehicle_in_batches', to='vms_app.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='AccidentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(max_length=50)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True)),
                ('contact', models.CharField(blank=True, max_length=50, null=True)),
                ('accident_time', models.DateTimeField(blank=True, null=True)),
                ('accident_location', models.CharField(blank=True, max_length=250, null=True)),
                ('accident_severity', models.CharField(choices=[('Fatality', 'Fatality'), ('Near Miss', 'Near Miss'), ('Property Damage', 'Property Damage')], max_length=100)),
                ('cause_of_accident', models.CharField(choices=[('Mechanical Failure', 'Mechanical Failure'), ('Hydraulic Failure', 'Hydraulic Failure'), ('Over Speeding', 'Over Speeding'), ('Poor Visibility', 'Poor Visibility'), ('Lack of Attention', 'Lack of Attention'), ('Influence of Alcohol', 'Influence of Alcohol'), ('Lack of Training', 'Lack of Training'), ('Others', 'Others')], max_length=100)),
                ('action_needed', models.TextField()),
                ('remark', models.TextField()),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vms_app.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='workshop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='workshop_vehicles_set', to='vms_app.workshop'),
        ),
        migrations.CreateModel(
            name='JobCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_on', models.DateTimeField(auto_now_add=True)),
                ('work_start_at', models.DateTimeField(blank=True, null=True)),
                ('work_closed_at', models.DateTimeField(blank=True, null=True)),
                ('work', models.CharField(blank=True, max_length=250, null=True)),
                ('zonal_manager_remark', models.TextField(blank=True, null=True)),
                ('spares', models.CharField(blank=True, max_length=500, null=True)),
                ('spare_code', models.CharField(blank=True, max_length=500, null=True)),
                ('spare_requested_date', models.DateField(blank=True, null=True)),
                ('approval_remark', models.TextField(blank=True, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('mechanics', models.CharField(blank=True, max_length=500, null=True)),
                ('driver', models.CharField(blank=True, max_length=500, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Assigned', 'Assigned'), ('Spare Requested', 'Spare Requested'), ('Spare Alloted', 'Spare Alloted'), ('Working', 'Working'), ('Completed', 'Completed')], default='Assigned', max_length=50)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employee_job_triggered_set', to=settings.AUTH_USER_MODEL)),
                ('work_start_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employee_job_worked_set', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(limit_choices_to={'is_active': True, 'is_under_maintenance': False}, on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_maintanence_history', to='vms_app.vehicle')),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workshop_jobs', to='vms_app.workshop')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('Accident', 'Accident'), ('Breakdown', 'Breakdown'), ('General Maintenance', 'General Maintenance')], max_length=100)),
                ('driver_name', models.CharField(blank=True, max_length=50, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True)),
                ('driver_contact', models.CharField(blank=True, max_length=50, null=True)),
                ('incident_time', models.DateTimeField(blank=True, null=True)),
                ('incident_location', models.CharField(blank=True, max_length=250, null=True)),
                ('incident_brief', models.TextField()),
                ('cause_of_incident', models.TextField()),
                ('investigated_by', models.CharField(blank=True, max_length=200, null=True)),
                ('driver_comment', models.TextField()),
                ('zonal_manager_comment', models.TextField()),
                ('mechanic_comment', models.TextField()),
                ('estimated_repair_cost', models.FloatField(blank=True, null=True)),
                ('cost_responsible', models.CharField(choices=[('Company', 'Company'), ('Insurance', 'Insurance'), ('Third party', 'Third party')], max_length=250)),
                ('action_needed', models.TextField()),
                ('remark', models.TextField()),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vms_app.vehicle')),
                ('sent_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='workshops_incidents_set', to='vms_app.workshop')),
            ],
        ),
        migrations.AddField(
            model_name='ward',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contained_wards_set', to='vms_app.zone'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='zone_vehicles_set', to='vms_app.zone'),
        ),
        migrations.CreateModel(
            name='TransferRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField()),
                ('reason', models.TextField()),
                ('reacted_date', models.DateField(blank=True, default=None, null=True)),
                ('status', models.CharField(choices=[('approved', 'approved'), ('hold', 'hold'), ('rejected', 'rejected')], default='hold', max_length=100)),
                ('remark', models.CharField(blank=True, max_length=250, null=True)),
                ('log_no', models.PositiveIntegerField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_transregister_set', to=settings.AUTH_USER_MODEL)),
                ('reacted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='emp_responds', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='emp_requests_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_transregister_set', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.PROTECT, to='vms_app.vehicle')),
                ('from_zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_zones_tl', to='vms_app.zone')),
                ('to_zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_zones_tl', to='vms_app.zone')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='shift',
            unique_together={('shift_name', 'vehicle', 'shift_date')},
        ),
    ]
